name: Release
on:
    push:
        branches:
            - main
permissions:
    actions: write
    contents: write
    id-token: write
    packages: write
    pull-requests: write
concurrency: ${{ github.workflow }}-${{ github.ref }}
jobs:
    release:
        name: Release
        runs-on: ubuntu-latest
        outputs:
            published: ${{ steps.changeset.outputs.published }}
            publishedPackages: ${{ steps.changeset.outputs.publishedPackages }}
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: current
                  cache: "yarn"

            - name: Install Foundry
              uses: foundry-rs/foundry-toolchain@v1

            - name: Install Dependencies
              run: yarn

            - name: Create Release Pull Request
              id: changeset
              uses: changesets/action@v1
              with:
                  version: yarn run version-packages
                  commit: "release: version packages"
                  publish: yarn run publish-packages
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    packages_to_build:
        name: Get released packages
        runs-on: ubuntu-latest
        needs: release
        if: ${{ needs.release.outputs.published == 'true' }}
        outputs:
            packages: ${{ steps.packages.outputs.PACKAGES }}
        steps:
            - name: Get released packages
              id: packages
              run: |
                  echo "PACKAGES=$(jq -c '[ .[].name ]' <(echo '${{ needs.release.outputs.publishedPackages }}'))" >> "$GITHUB_OUTPUT"

    build_rollups_node:
        name: Build rollups-node
        needs: [release, packages_to_build]
        if: ${{ needs.release.outputs.published == 'true' && contains(fromJSON(needs.packages_to_build.outputs.packages), 'rollups-node') }}
        uses: ./.github/workflows/rollups-node.yaml
        secrets: inherit

    build_sdk:
        name: Build sdk
        needs: [release, packages_to_build]
        if: ${{ needs.release.outputs.published == 'true' && contains(fromJSON(needs.packages_to_build.outputs.packages), 'sdk') }}
        uses: ./.github/workflows/sdk.yaml
        secrets: inherit

    build_anvil:
        name: Build anvil
        needs: [release, packages_to_build]
        if: ${{ needs.release.outputs.published == 'true' && contains(fromJSON(needs.packages_to_build.outputs.packages), 'anvil') }}
        uses: ./.github/workflows/anvil.yaml
        secrets: inherit

    build_devnet:
        name: Build devnet
        needs: [release, packages_to_build]
        if: ${{ needs.release.outputs.published == 'true' && contains(fromJSON(needs.packages_to_build.outputs.packages), 'devnet') }}
        uses: ./.github/workflows/devnet.yaml
        secrets: inherit

    build_contracts:
        name: Build contracts
        needs: [release, packages_to_build]
        if: ${{ needs.release.outputs.published == 'true' && contains(fromJSON(needs.packages_to_build.outputs.packages), '@sunodo/contracts') }}
        uses: ./.github/workflows/contracts.yaml
        secrets: inherit
        with:
            do-release: true

    build_cli:
        name: Build cli
        needs: [release, packages_to_build]
        if: ${{ needs.release.outputs.published == 'true' && contains(fromJSON(needs.packages_to_build.outputs.packages), '@sunodo/cli') }}
        uses: ./.github/workflows/cli.yaml
        secrets: inherit
        with:
            do-release: true
